version: '3.8'

services:
  # bgutil-ytdlp-pot-provider service (dependency)
  bgutil-provider:
    image: brainicism/bgutil-ytdlp-pot-provider:latest
    container_name: bgutil-provider-local
    ports:
      - "4416:4416"
    restart: unless-stopped
    networks:
      - video-pipeline-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4416/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # LocalStack for local AWS services
  localstack:
    image: localstack/localstack:latest
    container_name: localstack-main
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
      - "8080:8080"  # LocalStack Web UI
    environment:
      - DEBUG=1
      - SERVICES=s3,dynamodb,sqs,cloudwatch,logs
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_HOST=localhost
    volumes:
      - localstack-data:/tmp/localstack
      - ./localstack/init:/etc/localstack/init/ready.d
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - video-pipeline-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Main video pipeline application with LocalStack
  video-pipeline:
    build: 
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: video-pipeline-local
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - ENABLE_SQS_POLLING=true
      - S3_UPLOAD_ENABLED=true
      - PODCAST_CONVERSION_ENABLED=true
      
      # LocalStack Configuration
      - LOCALSTACK=true
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      
      # S3 Configuration
      - S3_AUDIO_BUCKET_NAME=pd-audio-storage
      - S3_VIDEO_BUCKET_NAME=pd-video-storage
      
      # DynamoDB Configuration
      - DYNAMODB_PODCAST_EPISODES_TABLE=PodcastEpisodeStore
      
      # SQS Configuration
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/video-pipeline-jobs
      - VIDEO_TRIMMING_QUEUE_URL=http://localstack:4566/000000000000/test-video-trimming
      
      # Processing Configuration
      - MAX_CONCURRENT_JOBS=1
      - POLLING_INTERVAL_MS=10000
      - DEFAULT_VIDEO_QUALITY=480p
      - PREFERRED_AUDIO_FORMAT=mp3
      
      # Logging
      - LOG_LEVEL=debug
      
      # bgutil provider
      - BGUTIL_PROVIDER_URL=http://bgutil-provider:4416
      
    volumes:
      - ./src:/app/src
      - ./downloads:/app/downloads
      - ./temp:/app/temp
      - video-pipeline-data:/app/data
    depends_on:
      bgutil-provider:
        condition: service_healthy
      localstack:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - video-pipeline-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  video-pipeline-data:
  localstack-data:

networks:
  video-pipeline-local:
    driver: bridge
    name: video-pipeline-local
