{
  "name": "podcast-processing-pipeline",
  "version": "1.0.0",
  "description": "A podcast processing pipeline to convert YouTube videos to podcast episodes with audio extraction and metadata processing",
  "main": "dist/server.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "start": "npm run build && node dist/index.js",
    "dev": "tsx src/index.ts",
    "server": "tsx src/server.ts",
    "server:build": "npm run build && node dist/server.js",
    "server:localstack": "LOCALSTACK=true tsx src/server.ts",
    "setup": "tsx src/scripts/setup_binaries.ts",
    "update-ytdlp": "tsx src/scripts/update_ytdlp.ts",
    "update-ytdlp:nightly": "tsx src/scripts/update_ytdlp.ts --nightly",
    "update-ytdlp:force": "tsx src/scripts/update_ytdlp.ts --force",
    "update-ytdlp:periodic": "tsx src/scripts/update_ytdlp.ts --periodic",
    "update-ytdlp:nightly-periodic": "tsx src/scripts/update_ytdlp.ts --nightly --periodic",
    "postinstall": "tsx src/scripts/setup_binaries.ts",
    "clean": "rm -rf dist",
    "server:sqs": "ENABLE_SQS_POLLING=true tsx src/server.ts",
    "server:sqs:localstack": "LOCALSTACK=true ENABLE_SQS_POLLING=true tsx src/server.ts",
    "test:sqs:send": "chmod +x ./scripts/test-sqs.sh && ./scripts/test-sqs.sh",
    "localstack:init": "tsx src/scripts/setup-localstack.ts",
    "localstack:test": "tsx src/scripts/test-localstack-integration.ts",
    "test:logger": "LOCALSTACK=true tsx src/scripts/test-logger.ts",
    "test:logger:prod": "tsx src/scripts/test-logger.ts",
    "test:sqs:cloudwatch": "LOCALSTACK=true tsx src/scripts/test-sqs-cloudwatch.ts",
    "test:job-queue": "LOCALSTACK=true tsx src/scripts/test-job-queue.ts",
    "test:podcast-conversion": "LOCALSTACK=true tsx src/scripts/test-podcast-conversion.ts",
    "test:podcast-conversion:prod": "tsx src/scripts/test-podcast-conversion.ts",
    "test:podcast-pipeline": "LOCALSTACK=true tsx src/scripts/test-podcast-pipeline.ts",
    "test:podcast-pipeline:prod": "tsx src/scripts/test-podcast-pipeline.ts",
    "test:existing-metadata": "LOCALSTACK=true tsx src/scripts/test-existing-metadata.ts",
    "test:existing-metadata:prod": "tsx src/scripts/test-existing-metadata.ts",
    "query:podcast-data": "LOCALSTACK=true tsx src/scripts/query-podcast-data.ts",
    "query:podcast-data:prod": "tsx src/scripts/query-podcast-data.ts",
    "demo:podcast-workflow": "LOCALSTACK=true tsx src/scripts/demo-podcast-workflow.ts",
    "demo:podcast-workflow:prod": "tsx src/scripts/demo-podcast-workflow.ts",
    "demo:podcast-api": "LOCALSTACK=true tsx src/scripts/demo-podcast-workflow.ts api",
    "demo:podcast-query": "LOCALSTACK=true tsx src/scripts/demo-podcast-workflow.ts query",
    "test:s3-naming": "LOCALSTACK=true tsx src/scripts/test-s3-naming.ts",
    "test:s3-naming:prod": "tsx src/scripts/test-s3-naming.ts",
    "test:ephemeral-s3": "LOCALSTACK=true tsx src/scripts/test-ephemeral-s3.ts",
    "test:ephemeral-s3:prod": "tsx src/scripts/test-ephemeral-s3.ts",
    "test:localstack": "npm run localstack:init && npm run localstack:test && npm run server:localstack",
    "test:integration": "npm run localstack:init && npm run localstack:test",
    "test:server:sqs": "npm run localstack:init && npm run test:job-queue && npm run server:sqs:localstack"
  },
  "keywords": [
    "podcast",
    "audio-processing",
    "youtube",
    "yt-dlp",
    "ffmpeg",
    "node",
    "aws",
    "s3",
    "dynamodb"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@aws-sdk/client-cloudwatch": "^3.828.0",
    "@aws-sdk/client-cloudwatch-logs": "^3.828.0",
    "@aws-sdk/client-dynamodb": "^3.828.0",
    "@aws-sdk/client-ecs": "^3.828.0",
    "@aws-sdk/client-s3": "^3.828.0",
    "@aws-sdk/client-sqs": "^3.828.0",
    "@aws-sdk/lib-dynamodb": "^3.828.0",
    "@aws-sdk/s3-request-presigner": "^3.828.0",
    "axios": "^1.9.0",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "progress": "^2.0.3",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@types/cors": "^2.8.18",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^5.0.2",
    "@types/node": "^22.15.29",
    "@types/progress": "^2.0.7",
    "@types/uuid": "^10.0.0",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3"
  }
}
